{"ast":null,"code":"var _jsxFileName = \"/Users/a1/Documents/test_projects/test-react/rock-ui/src/components/Button/button.tsx\";\nimport React from 'react';\nimport classnames from 'classnames';\nexport let ButtonSize;\n\n(function (ButtonSize) {\n  ButtonSize[\"Large\"] = \"lg\";\n  ButtonSize[\"Small\"] = \"sm\";\n})(ButtonSize || (ButtonSize = {}));\n\nexport let ButtonType;\n\n(function (ButtonType) {\n  ButtonType[\"Primary\"] = \"primary\";\n  ButtonType[\"Danger\"] = \"danger\";\n  ButtonType[\"Default\"] = \"default\";\n  ButtonType[\"Link\"] = \"link\";\n})(ButtonType || (ButtonType = {}));\n\nconst Button = props => {\n  const {\n    btnType,\n    disabled,\n    size,\n    children,\n    href\n  } = props;\n  const classes = classnames('btn', {\n    [`btn-${btnType}`]: btnType,\n    [`btn-${size}`]: size,\n    'disabled': btnType === ButtonType.Link && disabled\n  });\n\n  if (btnType === ButtonType.Link && href) {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      className: classes,\n      href: href,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, children);\n  } else {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: classes,\n      disabled: disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, children);\n  }\n};\n\nButton.defaultProps = {\n  disabled: false,\n  btnType: ButtonType.Default\n};\nexport default Button;","map":{"version":3,"sources":["/Users/a1/Documents/test_projects/test-react/rock-ui/src/components/Button/button.tsx"],"names":["React","classnames","ButtonSize","ButtonType","Button","props","btnType","disabled","size","children","href","classes","Link","defaultProps","Default"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,WAAYC,UAAZ;;WAAYA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AAKZ,WAAYC,UAAZ;;WAAYA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AAgBZ,MAAMC,MAAiC,GAAIC,KAAD,IAAW;AACnD,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,IAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA;AALI,MAMFL,KANJ;AAOA,QAAMM,OAAO,GAAGV,UAAU,CAAC,KAAD,EAAQ;AAChC,KAAE,OAAMK,OAAQ,EAAhB,GAAoBA,OADY;AAEhC,KAAE,OAAME,IAAK,EAAb,GAAiBA,IAFe;AAGhC,gBAAaF,OAAO,KAAKH,UAAU,CAACS,IAAxB,IAAiCL;AAHb,GAAR,CAA1B;;AAMA,MAAID,OAAO,KAAKH,UAAU,CAACS,IAAvB,IAA+BF,IAAnC,EAAyC;AACvC,wBACE;AAAG,MAAA,SAAS,EAAEC,OAAd;AAAuB,MAAA,IAAI,EAAED,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,QADH,CADF;AAKD,GAND,MAMO;AACL,wBACE;AAAQ,MAAA,SAAS,EAAEE,OAAnB;AAA4B,MAAA,QAAQ,EAAEJ,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,QADH,CADF;AAKD;AACF,CA3BD;;AA6BAL,MAAM,CAACS,YAAP,GAAsB;AACpBN,EAAAA,QAAQ,EAAE,KADU;AAEpBD,EAAAA,OAAO,EAAEH,UAAU,CAACW;AAFA,CAAtB;AAKA,eAAeV,MAAf","sourcesContent":["import React from 'react'\nimport classnames from 'classnames'\nexport enum ButtonSize {\n  Large = 'lg',\n  Small = 'sm'\n}\n\nexport enum ButtonType {\n  Primary = 'primary',\n  Danger = 'danger',\n  Default = 'default',\n  Link = 'link'\n}\n\ninterface BaseButtonProps {\n  className?: string;\n  disabled?: boolean;\n  size?: ButtonSize;\n  btnType?: ButtonType;\n  children: string;\n  href?: string;\n}\n\nconst Button: React.FC<BaseButtonProps> = (props) => {\n  const {\n    btnType,\n    disabled,\n    size,\n    children,\n    href\n  } = props\n  const classes = classnames('btn', {\n    [`btn-${btnType}`]: btnType,\n    [`btn-${size}`]: size,\n    'disabled': (btnType === ButtonType.Link) && disabled\n  })\n\n  if (btnType === ButtonType.Link && href) {\n    return (\n      <a className={classes} href={href}>\n        {children}\n      </a>\n    )\n  } else {\n    return (\n      <button className={classes} disabled={disabled}>\n        {children}\n      </button>\n    )\n  }\n}\n\nButton.defaultProps = {\n  disabled: false,\n  btnType: ButtonType.Default\n}\n\nexport default Button"]},"metadata":{},"sourceType":"module"}